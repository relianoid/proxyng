#!/bin/bash

# e2c
# This script create a commit with the last EE changes in the merge-ee branch of the community repository.
# The script uses the current content of the EE repository, it does not use the last commit.

rsync_bin=`which rsync`

if [[ -z "$rsync_bin" ]]; then
	echo "ERROR: Please install rsync first. Thanks ;)"
	exit 1;
fi

function msg() {
	echo -e "\n#### ${1} ####\n"
}


function print_usage_and_exit() {
	echo "Usage: $(basename "$0") [options]

	Options:
	--auto-merge		Apply automatly a commit in the CE branch 'merge-ee'"
	exit 1
}


while [ $# -gt 0 ]; do
	case $1 in
	--auto-merge)
		AUTO_MERGE=1
		;;
	*)
		echo "Invalid option: $1"
		print_usage_and_exit
		;;
	esac

	shift
done

# variables
CE_REPO="git@gitlab.zevenet.com:cristina.guerra/zevenet-ce.git"
CE_BRANCH="merge-ee"

zevenet_home='usr/local/zevenet'
BASE_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null && pwd )"
com_dir="${BASE_DIR}/CE_WORKDIR"
tmp_dir="${BASE_DIR}/TMP_CE_WORKDIR"
ce_files_dir="${BASE_DIR}/files-ce"

# get commit hash
EE_COMMIT=$(git log --oneline | head -1 | cut -d' ' -f1)

# Setup a clean EE environment
msg "Cleaning the EE directory..."
rm -rf $tmp_dir
mkdir $tmp_dir

msg "Copying EE files..."
$rsync_bin -a --exclude "/$(basename "$BASE_DIR")" ../* $tmp_dir/

# load files
source config

# remove EE files
msg "Removing EE files..."
for file in "${encrypted_files[@]}"; do
	rm -rf ${tmp_dir}/$file
done
for file in "${enterprise_files[@]}"; do
	rm -rf ${tmp_dir}/$file
done

# copy community files
msg "Copying CE files..."
cp -r ${ce_files_dir}/* ${tmp_dir}


# clone CE repository
msg "Cloning the community repository..."
rm -rf $com_dir
git clone $CE_REPO $com_dir
cd $com_dir
git fetch --all --tags --prune
git checkout $CE_BRANCH
cd ..

# clean the CE to detect if a file has been deleted
rm -rf ${com_dir}/*

# copy all EE to the CE
cp -r ${tmp_dir}/* $com_dir
rm -rf ${tmp_dir}


# apply the commit to CE
if [ $AUTO_MERGE ]; then
	DATE=$(date +%H:%M:%S_%d/%m/%y)
	cd $com_dir

	git config user.email "devel@zevenet.com"
	git config user.name "AutoCommit"

	git add .
	git commit -m "[auto_merge] EE commit: $EE_COMMIT, date: $DATE"
	git push
fi

