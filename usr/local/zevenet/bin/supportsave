#!/bin/bash
###############################################################################
#
#    Zevenet Software License
#    This file is part of the Zevenet Load Balancer software package.
#
#    Copyright (C) 2014-today ZEVENET SL, Sevilla (Spain)
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as
#    published by the Free Software Foundation, either version 3 of the
#    License, or any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
###############################################################################

GLOBALCONF="/usr/local/zevenet/config/global.conf"

if [ -f "/usr/local/zevenet/bin/load_global_conf" ];
then
	source /usr/local/zevenet/bin/load_global_conf
	load_global_conf
else
	echo "Error loading the envirovement"
fi
NFTBIN=$nft_bin

tmp_name=`/bin/date +%Y%m%d_%H%M`
hostname=`hostname`
home_dir="/usr/local/zevenet"
ss_dir="supportsave_${hostname}_${tmp_name}"
prefix="/tmp"

if [ -d "$1" ]; then
	prefix=${1}
fi

backup_dir="${prefix}/${ss_dir}"

config_paths=`perl -MZevenet::Config -e 'print getGlobalConfiguration("backupfor");'`;
zbindir=`perl -MZevenet::Config -e 'print getGlobalConfiguration("zbindir");'`;

monitoring_paths="${home_dir}/app/zenrrd/rrd ${home_dir}/logs /var/log/messages* /var/log/syslog* /var/log/letsencrypt /var/log/cherokee* ${home_dir}/node_status /var/log/apt /var/run/*_proxy.pid";


echo "Saving information for support in the path ${backup_dir}.tar.gz"
/bin/mkdir $backup_dir


echo "Saving system information:"
#################################

echo "- Hardware"
/usr/sbin/dmidecode                     >> $backup_dir/dmi.txt
/bin/hostname                           >> $backup_dir/dmi.txt

echo "- Modules"
/sbin/lsmod                             >> $backup_dir/lsmod.txt

echo "- Packages"
dpkg -l                                 >> $backup_dir/package_list.txt

echo "- Processes"
echo "ps aux"                           >> $backup_dir/ps.txt
/bin/ps aux                             >> $backup_dir/ps.txt

echo "- Resources"
echo "--- Uptime information ---"       >> $backup_dir/system_resources.txt
/usr/bin/uptime                         >> $backup_dir/system_resources.txt
echo -e "\n--- Memory information ---"  >> $backup_dir/system_resources.txt
/usr/bin/free -m                        >> $backup_dir/system_resources.txt
echo -e "\n--- CPU information ---"     >> $backup_dir/system_resources.txt
cat /proc/cpuinfo                       >> $backup_dir/system_resources.txt
echo -e "\n--- TOP information ---"     >> $backup_dir/system_resources.txt
/usr/bin/top -b -n1                     >> $backup_dir/system_resources.txt
echo -e "\n--- Resolv config ---"	>> $backup_dir/system_resources.txt
cat /etc/resolv.conf 			>> $backup_dir/system_resources.txt
echo -e "\n---Kernel Version ---"	>> $backup_dir/system_resources.txt
uname -a				>> $backup_dir/system_resources.txt

echo "- Partitions"
/bin/df -h                              >> $backup_dir/partitions.txt 2>&1

echo "- Time"
${zbindir}/zenntp                    	>> $backup_dir/ntp_test.txt 2>&1

echo "- Sessions Table"
ssyncdctl=`perl -MZevenet::Config -e 'print getGlobalConfiguration("ssyncdctl_bin");'`;
$ssyncdctl show http	>> $backup_dir/sessions_http.txt 2>&1
$ssyncdctl show nft	>> $backup_dir/sessions_nft.txt 2>&1

if [[ -d ${home_dir}/lib/Zevenet/RBAC ]];
then
	echo "- RBAC"
	cp /etc/group                          $backup_dir/
	cp /etc/passwd                         $backup_dir/
fi

echo "- Subscription"
cat /etc/apt/apt.conf			>> $backup_dir/apt.conf.txt
cat /etc/apt/sources.list		>> $backup_dir/sources.list.txt
for i in `ls /etc/apt/sources.list.d/`; do
	cat /etc/apt/sources.list.d/$i 				>> $backup_dir/sources.list.d.$i.txt
done

echo "Saving network information:"
##################################

echo "- Interfaces"
/sbin/ifconfig -a                       >> $backup_dir/ifconfig.txt
/sbin/ip link show                      >> $backup_dir/ip_link.txt
/sbin/ip addr show                      >> $backup_dir/ip_addr.txt

echo "- Bondings"
for i in  `ls /proc/net/bonding/`
do
	echo ">>>>Interface $i"		>> $backup_dir/bonding_system.txt
	cat /proc/net/bonding/$i	>> $backup_dir/bonding_system.txt
done

echo "- Routes"
for i in `cat /etc/iproute2/rt_tables  | grep "table_" | grep -v '^#' | awk {'print $2'}`
do
    echo "ip route list table $i"       >> $backup_dir/route.txt
    /sbin/ip route list table $i        >> $backup_dir/route.txt
done
echo "ip route list table main"         >> $backup_dir/route.txt
/sbin/ip route list table main          >> $backup_dir/route.txt
echo "ip rule list"                     >> $backup_dir/route.txt
/sbin/ip rule list                      >> $backup_dir/route.txt

echo "- Sockets"
echo "netstat -putan"                   >> $backup_dir/netstat.txt
/bin/netstat -putan                     >> $backup_dir/netstat.txt
echo "netstat -nr"                      >> $backup_dir/netstat.txt
/bin/netstat -nr                        >> $backup_dir/netstat.txt

echo "- Netfilter"
echo "List nftables ruleset "			>> $backup_dir/nftables.txt
$NFTBIN list ruleset		>> $backup_dir/nftables.txt

echo "- Sysctl params"
/usr/sbin/sysctl -a						>> $backup_dir/sysctl.txt

echo "- Sysctl params"
/usr/sbin/sysctl -a						>> $backup_dir/sysctl.txt

CURL=`which curl`
echo "nftlb daemon farms data"			>> $backup_dir/nftlb.txt
$CURL --noproxy "*" --connect-timeout 10 -s -H "Key: HoLa" http://127.0.0.1:27/farms >> $backup_dir/nftlb.txt
echo "nftlb daemon policies data"		>> $backup_dir/nftlb.txt
$CURL --noproxy "*" --connect-timeout 10 -s -H "Key: HoLa" http://127.0.0.1:27/policies >> $backup_dir/nftlb.txt

echo "- Reverse Proxy"
proxyctl=`perl -MZevenet::Config -e 'print getGlobalConfiguration("proxyctl");'`;
proxyng=`perl -MZevenet::Config -e 'print getGlobalConfiguration("proxy_ng");'`;
fstatus="$backup_dir/proxy_status.txt"
for i in `ls /tmp/*_proxy.socket 2>/dev/null`
do
	farm=`basename $i |cut -d"_" -f1`
	echo "############# Farm: $farm" >> $fstatus
	echo "" >> $fstatus
	echo "# ps -feww | grep ${farm}_proxy.cfg | grep -v grep" >> $fstatus
	ps -feww | grep ${farm}_proxy.cfg | grep -v grep >> $fstatus
	echo "" >> $fstatus
	echo "# $proxyctl -c $i" >> $fstatus
	$proxyctl -c $i >> $fstatus
	echo "" >> $fstatus
	if [ "$proxy_ng" == "true" ]
	then
		echo "# curl --connect-timeout 10 --unix-socket $i http://localhost/listener" >> $backup_dir/proxy_status.txt
		$CURL --connect-timeout 10 --unix-socket $i http://localhost/listener >> $backup_dir/proxy_status.txt
		echo "" >> $fstatus
		echo "" >> $fstatus
		echo "# curl --connect-timeout 10 --unix-socket $i http://localhost/debug" >> $backup_dir/proxy_status.txt
		$CURL --connect-timeout 10 --unix-socket $i http://localhost/debug  >> $fstatus
		echo "" >> $fstatus
	fi
	echo "" >> $fstatus
done


echo "- ARP table"
/usr/sbin/arp -n                        >> $backup_dir/arp_table.txt

echo "- nf_conntrack"
if [ -f /usr/sbin/conntrack ];
then
    /usr/sbin/conntrack -L              >> $backup_dir/conntrack.txt 2>&1
fi

if [ -f /etc/zevenet_version ]; then
	/bin/cp /etc/zevenet_version $backup_dir/template_version
fi

package_vers=`perl -MZevenet::Config -e 'print getGlobalConfiguration("version");'`;
echo $package_vers > $backup_dir/zevenet_pkg_version

echo "Saving configuration files"
#################################
/bin/tar zcf $backup_dir/config.tar.gz $config_paths 2>/dev/null


echo "Saving monitoring files"
##############################
/bin/cp ${home_dir}/www/*.pem $backup_dir 2>/dev/null
/bin/tar zcf $backup_dir/monitoring.tar.gz $monitoring_paths 2>/dev/null

if [ -f /usr/local/zevenet/bin/enterprise.bin ]; then
	echo "Saving monitoring files"
	/usr/local/zevenet/bin/supportsave_ext $backup_dir
	# copiar al dir
fi


echo "Packing supportsave"
##########################
cd ${prefix}
/bin/tar zcf ${ss_dir}.tar.gz ${ss_dir} 2>/dev/null
cd - >/dev/null

echo "Cleaning temporal files"
##########################
/bin/rm -rf ${backup_dir}

ls -lh ${backup_dir}.tar.gz
