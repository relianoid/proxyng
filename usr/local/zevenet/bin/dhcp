#!/usr/bin/perl
###############################################################################
#
#    Zevenet Software License
#    This file is part of the Zevenet Load Balancer software package.
#
#    Copyright (C) 2014-today ZEVENET SL, Sevilla (Spain)
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as
#    published by the Free Software Foundation, either version 3 of the
#    License, or any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
###############################################################################

# Place this file in /etc/network/if-up.d/

use strict;
use warnings;
use feature 'say';
use Data::Dumper;
$Data::Dumper::Sortkeys = 1;

require Zevenet::Net::Interface;
require Zevenet::Net::Route;
require Zevenet::Net::Validate;
require Zevenet::Farm::Core;
require Zevenet::Farm::Base;
require Zevenet::Farm::Config;

sub getSystemData    #($if_name)
{
	my ( $if_name ) = @_;

	my $if_ref = &getSystemInterface( $if_name );

	my $line = `ip addr list dev $if_name | grep -E '$if_ref->{ name }\$'`;

	# Searching IPv4 String for IP#IPv6? #FIXME
	if ( $line =~ /(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\/([0-9]+)/ )
	{
		#split strings
		my @words = split ( / /, $line );
		chomp ( @words );
		my ( $hostaddr, $bits ) = ( $1, $2 );

		#bit mask
		use Net::Netmask;
		my $in      = "$hostaddr/$bits";
		my $cidr    = $in;
		my $block   = Net::Netmask->new2( $cidr ) or die $Net::Netmask::error;
		my $netmask = $block->mask;

		#charge in $if_ref the pending values of system
		$if_ref->{ addr } = $hostaddr;
		$if_ref->{ mask } = $netmask;
		$if_ref->{ ip_v } = "4";

		my $gw       = &getDefaultGW( $if_ref->{ name } );
		my $gwGlobal = &getDefaultGW();
		my $if_gw    = &getIfDefaultGW();
		print "DEBUG: GW:  $gw  \n" if ( $gw );
		print "DEBUG: IF default GW:" . $if_gw . "\n" if ( $if_gw );
		$if_ref->{ gateway } = $gw;

		#Save Default GW configuration from global.
		if ( "$if_gw" eq "$if_ref->{ dev }" )
		{
			print "DEBUG: Changing Default GW for table Global\n";
			##salvar rutas en global.conf?
			&applyRoutes( "global", $if_ref, $gwGlobal );
		}
		#
	}

	return $if_ref;
}
######

my $if_name;
my @iflist;

#Get a Interface List
if ( defined $ENV{ 'IFACE' } )
{
	print "Defined " . "$ENV{'IFACE'}" . "\n";
	if ( $ENV{ 'IFACE' } eq '--all' )
	{
		@iflist = &getInterfaceList();
	}
	else
	{
		@iflist = ( $ENV{ 'IFACE' } );
	}
}
elsif ( defined $ARGV[0] )
{
	print "NIC defined $ARGV[0] \n";
	@iflist = ( $ARGV[0] );
}
else
{
	print "NIC not defined; check all NICs\n";
	@iflist = &getInterfaceList();
}

&zenlog( "Launching dhcp for the interfaces:", 'debug2', 'dhcp' );
&zenlog( Dumper @iflist,                       'debug2', 'dhcp' );

foreach $if_name ( @iflist )
{
	next if $if_name eq 'lo';
	next if $if_name eq 'cl_maintenance';

	my $if_conf_ref = &getInterfaceConfig( $if_name );

	next if ( !defined $if_conf_ref );
	next if ( $if_conf_ref->{ dhcp } ne 'true' );
	next if ( $if_conf_ref->{ type } eq 'virtual' );

	my $dhcp_ref = &getSystemData( $if_name );

	if (     ( $dhcp_ref->{ addr } eq $if_conf_ref->{ addr } )
		 and ( $dhcp_ref->{ gateway } eq $if_conf_ref->{ gateway } ) )
	{
		&zenlog( "Interface $if_name does not need to be modified", "debug", "dhcp" );
		next;
	}

	&zenlog( "DHCP got a new IP ($dhcp_ref->{ addr }) for the interface $if_name",
			 'info', 'dhcp' );

	# validate the netmask
	if ( $if_conf_ref->{ addr } )
	{
		my $valid = &getNetValidate(
									 $if_conf_ref->{ addr },
									 $if_conf_ref->{ mask },
									 $dhcp_ref->{ addr }
		);
		unless ( $valid and ( $if_conf_ref->{ mask } eq $if_conf_ref->{ mask } ) )
		{
			&zenlog( "The IP changed of netmask, virtual interfaces are useless, aborting",
					 "error", "dhcp" );
			next;
		}
	}

	$if_conf_ref->{ addr }    = $dhcp_ref->{ addr };
	$if_conf_ref->{ mask }    = $dhcp_ref->{ mask };
	$if_conf_ref->{ gateway } = $dhcp_ref->{ gateway };

	# Add new IP, netmask and gateway
	unless ( &setInterfaceConfig( $if_conf_ref ) )
	{
		&zenlog( "Error saving the new dhcp configuration", "error", "dhcp" );
		next;
	}

	&writeRoutes( $if_conf_ref->{ name } );

	# change farm vip,
	my @farms = &getFarmListByVip( $if_conf_ref->{ addr } );
	if ( @farms )
	{
		&zenlog( "Overwritting farms vip with $if_conf_ref->{ addr }", "debug",
				 'dhcp' );
		&setAllFarmByVip( $if_conf_ref->{ addr }, \@farms );
	}
}
