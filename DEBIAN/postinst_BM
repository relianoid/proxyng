#!/bin/bash
###############################################################################
#
#    Zevenet Software License
#    This file is part of the Zevenet Load Balancer software package.
#
#    Copyright (C) 2014-today ZEVENET SL, Sevilla (Spain)
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as
#    published by the Free Software Foundation, either version 3 of the
#    License, or any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
###############################################################################

GLOBALCF="/usr/local/zenloadbalancer/config/global.conf"
GLOBALCFT="/usr/local/zenloadbalancer/app/checkglobalconf/global.conf.tpl"

[ ! "$1" == "configure" ] && echo "Installation aborted $1 $2" && exit 1
[ "$1" == "configure" ] && echo "Completing the ZLB installation..."

if [ -f /usr/local/zenloadbalancer/app/zennetname/write_net_rules ]; then
	cp -f /usr/local/zenloadbalancer/app/zennetname/write_net_rules /lib/udev/
fi

# Check for binaries
PERLVER=`dpkg -l perl | grep perl | cut -d. -f-2 | xargs | cut -d\  -f3`
if [ -e "/usr/local/zenloadbalancer/www/zapi/v2/zapi.cgi.${PERLVER}" ]; then
	mv "/usr/local/zenloadbalancer/www/zapi/v2/zapi.cgi.${PERLVER}" "/usr/local/zenloadbalancer/www/zapi/v2/zapi.cgi"
	rm /usr/local/zenloadbalancer/www/zapi/v2/zapi.cgi.*
fi
if [ -e "/usr/local/zenloadbalancer/www/zapi/v3/zapi.cgi.${PERLVER}" ]; then
	mv "/usr/local/zenloadbalancer/www/zapi/v3/zapi.cgi.${PERLVER}" "/usr/local/zenloadbalancer/www/zapi/v3/zapi.cgi"
	rm /usr/local/zenloadbalancer/www/zapi/v3/zapi.cgi.*
fi
if [ -e "/usr/local/zenloadbalancer/app/zbin/zenloadbalancer.${PERLVER}" ]; then
	mv "/usr/local/zenloadbalancer/app/zbin/zenloadbalancer.${PERLVER}" "/usr/local/zenloadbalancer/app/zbin/zenloadbalancer"
	rm /usr/local/zenloadbalancer/app/zbin/zenloadbalancer.*
fi

# cryptolib
CRYPTOVERDEF="1.0.0"
CRYPTOVER=`find /usr/lib/ -name libcrypto.so.*.*.* | head -1 | awk -F'.' '{ printf $3 "." $4 "." $5}'`

# Check for cherokee version
CRYPTOV="$CRYPTOVER"
if [ ! -e "/usr/local/zenloadbalancer/app/cherokee.${CRYPTOV}" ]; then
	CRYPTOV="$CRYPTOVERDEF"
fi
cp -rpf /usr/local/zenloadbalancer/app/cherokee.${CRYPTOV}/* /usr/local/zenloadbalancer/app/cherokee/
rm -rf /usr/local/zenloadbalancer/app/cherokee.*

# Check for pound version
CRYPTOV="$CRYPTOVER"
if [ ! -e "/usr/local/zenloadbalancer/app/pound.${CRYPTOV}" ]; then
	CRYPTOV="$CRYPTOVERDEF"
fi
cp -rpf /usr/local/zenloadbalancer/app/pound.${CRYPTOV}/* /usr/local/zenloadbalancer/app/pound/
rm -rf /usr/local/zenloadbalancer/app/pound.*

#Check for libexec commands
LIBC6VER=`dpkg -l | grep libc6:amd | awk {'print $3'} | cut -d"-" -f1`
echo "libc version is $LIBC6VER"

if [ -e "/usr/local/zenloadbalancer/app/libexec" ];then
	rm -rf /usr/local/zenloadbalancer/app/libexec
fi

if [ -e "/usr/local/zenloadbalancer/app/libexec_${LIBC6VER}" ]; then
        mv "/usr/local/zenloadbalancer/app/libexec_${LIBC6VER}" "/usr/local/zenloadbalancer/app/libexec"
        rm -rf /usr/local/zenloadbalancer/app/libexec_*
else
        mv "/usr/local/zenloadbalancer/app/libexec_2.all" "/usr/local/zenloadbalancer/app/libexec"
        rm -rf /usr/local/zenloadbalancer/app/libexec_*
fi

# Get kernel version 
KERNEL_VERSION=`uname -r | cut -d. -f1-2`
# In Jessie move dependencies of libexec to system libs
if [ ${KERNEL_VERSION} == '3.16' ]; then
	mv /usr/lib/x86_64-linux-gnu.3.16/* /usr/lib/x86_64-linux-gnu
fi
# Remove dependencies of libexec
rm -r /usr/lib/x86_64-linux-gnu.3.16

# GSLB user management
GSLBHOME="/var/run/gdnsd"
GSLBSHELL="/usr/sbin/nologin"
GSLBUSER="gdnsd"
GSLBGROUP="nogroup"
adduser --system -q --home $GSLBHOME --shell $GSLBSHELL --disabled-password --ingroup $GSLBGROUP $GSLBUSER

#upgrading global.conf
/usr/local/zenloadbalancer/app/checkglobalconf/checkglobalconf.cgi

# Enable root access through SSH
SSHDCONFIG="/etc/ssh/sshd_config"
if [[ `grep -c "^PermitRootLogin.*yes" $SSHDCONFIG` == '0' ]]; then
	sed -i -e 's/^PermitRootLogin.*/PermitRootLogin yes/' $SSHDCONFIG
	/etc/init.d/ssh reload 2> /dev/null
fi

#Check Cherokee PID
if [ ! -f /usr/local/zenloadbalancer/app/cherokee/var/run/cherokee.pid ]; then
	pgrep cherokee$ > /usr/local/zenloadbalancer/app/cherokee/var/run/cherokee.pid
fi

# Disable services

# disable sec service
systemctl stop sec 2>/dev/null
systemctl disable sec 2>/dev/null

# disable SNMP service
if [ `grep -c '#zenlb' /etc/snmp/snmpd.conf` == '0' ]; then
        cp /usr/local/zenloadbalancer/app/checkglobalconf/snmpd.conf.tpl /etc/snmp/snmpd.conf
fi
#systemctl stop snmpd 2>/dev/null
#systemctl disable snmpd 2>/dev/null

# Create IPDS directories
/usr/local/zenloadbalancer/app/zbin/boot_ipds.pl

# Do not show warning messages from bonding module on syslog
ZEVENET_SYSLOG_FILE="/etc/rsyslog.d/10-zevenet.conf"
echo ':msg,contains,"Loading kernel module for a network device with CAP_SYS_MODULE (deprecated).  Use CAP_NET_ADMIN and alias netdev- instead" stop' > ${ZEVENET_SYSLOG_FILE}

# boot dependencies
sed -i 's/^\# Required-Start:.*/# Required-Start:\t\$remote_fs \$syslog zenloadbalancer/g' /etc/init.d/ssh
sed -i 's/^\# Required-Stop:.*/# Required-Stop:\t\$remote_fs \$syslog zenloadbalancer/g' /etc/init.d/ssh

chmod +x /usr/local/zenloadbalancer/config/zlb-start
chmod +x /usr/local/zenloadbalancer/config/zlb-stop

# Disable DNS resolution for SSH service
if [ -f /usr/local/zenloadbalancer/app/zbin/ssh_nodns.sh ]; then
        /usr/local/zenloadbalancer/app/zbin/ssh_nodns.sh
fi

# Load conntrack modules
/sbin/modprobe nf_conntrack 2> /dev/null
/sbin/modprobe ip_conntrack 2> /dev/null

# Delete manually setup ZenLB services
rm -f /etc/rc*.d/*zenloadbalancer

# Add ZenLB services to boot process including dependencies
update-rc.d zenloadbalancer defaults

# Link zenbui
if [ -f /usr/local/zenloadbalancer/app/zenbui/zenbui ];
then
	ln -sf /usr/local/zenloadbalancer/app/zenbui/zenbui /usr/bin/zenbui
fi

#Change prompt color
sed -i "s/1;30m/0;37m/g" /etc/bash.bashrc 2> /dev/null

#Flush apt sources
echo > /etc/apt/sources.list

echo "Zevenet Load Balancer installed..."
