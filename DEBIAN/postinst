#!/bin/bash
###############################################################################
#
#    Zevenet Software License
#    This file is part of the Zevenet Load Balancer software package.
#
#    Copyright (C) 2014-today ZEVENET SL, Sevilla (Spain)
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as
#    published by the Free Software Foundation, either version 3 of the
#    License, or any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
###############################################################################

GLOBALCF="/usr/local/zevenet/config/global.conf"
GLOBALCFT="/usr/local/zevenet/app/checkglobalconf/global.conf.tpl"

[ ! "$1" == "configure" ] && echo "Installation aborted $1 $2" && exit 1
[ "$1" == "configure" ] && echo "Completing the Zevenet installation..."

# Migration script
MSCRIPT="/usr/local/zevenet/app/zbin/zlbmigration302to303.pl"
if [ -f $MSCRIPT -a -f $GLOBALCF ]; then
	oldver=`cat $GLOBALCF | grep "version=" | awk -F'"' '{printf $2}'`
	newver=`cat $GLOBALCFT | grep "version=" | awk -F'"' '{printf $2}'`
	if [ "$oldver" == "3.02" ]; then
		$MSCRIPT
	fi
fi

if [ -f /usr/local/zevenet/app/zennetname/write_net_rules ]; then
	cp -f /usr/local/zevenet/app/zennetname/write_net_rules /lib/udev/
fi

# Check for binaries
PERLVER=`dpkg -l perl | grep perl | cut -d. -f-2 | xargs | cut -d\  -f3`
if [ -e "/usr/local/zevenet/www/zapi/v2/zapi.cgi.${PERLVER}" ]; then
	mv "/usr/local/zevenet/www/zapi/v2/zapi.cgi.${PERLVER}" "/usr/local/zevenet/www/zapi/v2/zapi.cgi"
	rm /usr/local/zevenet/www/zapi/v2/zapi.cgi.*
fi
if [ -e "/usr/local/zevenet/www/zapi/v3/zapi.cgi.${PERLVER}" ]; then
	mv "/usr/local/zevenet/www/zapi/v3/zapi.cgi.${PERLVER}" "/usr/local/zevenet/www/zapi/v3/zapi.cgi"
	rm /usr/local/zevenet/www/zapi/v3/zapi.cgi.*
fi
if [ -e "/usr/local/zevenet/app/zbin/zevenet.${PERLVER}" ]; then
	mv "/usr/local/zevenet/app/zbin/zevenet.${PERLVER}" "/usr/local/zevenet/app/zbin/zevenet"
	rm /usr/local/zevenet/app/zbin/zevenet.*
fi

#upgrading global.conf
/usr/local/zevenet/app/checkglobalconf/checkglobalconf.cgi

# Enable root access through SSH
SSHDCONFIG="/etc/ssh/sshd_config"
if [[ `grep -c "^PermitRootLogin.*yes" $SSHDCONFIG` == '0' ]]; then
	sed -i -e 's/^PermitRootLogin.*/PermitRootLogin yes/' $SSHDCONFIG
	/etc/init.d/ssh reload 2> /dev/null
fi

# Set crontab
if [ ! -f /etc/cron.d/zevenet ]; then
	cp /usr/local/zevenet/share/zevenet.cron /etc/cron.d/zevenet
fi

#Disable conntrackd stats 
sed -i '/Stats/,/}/d' /etc/conntrackd/conntrackd.conf 2>/dev/null
#delete old conntrackd-stats logs
rm -rf /var/log/conntrackd-stats* 2>/dev/null

# Disable services

# SNMP and sec services
if [ `grep -c '#zenlb' /etc/snmp/snmpd.conf` == '0' ]; then
	cp /usr/local/zevenet/app/checkglobalconf/snmpd.conf.tpl /etc/snmp/snmpd.conf
fi
if [ `grep -c 'Lsd' /etc/default/snmpd` == '1' ]; then
        sed -i -e 's/Lsd/LS6d/' /etc/default/snmpd
fi

if [ -f /bin/systemctl ]
then
	systemctl stop sec 2>/dev/null
	systemctl disable sec 2>/dev/null
else
	/etc/init.d/sec stop > /dev/null
	insserv -r sec
fi

# Do not mount /usr/local/zevenet/logs for zlb 4000 series
sed -i 's/^\/dev\/mapper\/zva64-log \/usr\/local\/zevenet\/logs        ext4    defaults        0       2//' /etc/fstab

# boot dependencies
sed -i 's/^\# Required-Start:.*/# Required-Start:\t\$remote_fs \$syslog zevenet/g' /etc/init.d/ssh
sed -i 's/^\# Required-Stop:.*/# Required-Stop:\t\$remote_fs \$syslog zevenet/g' /etc/init.d/ssh

#move zlb-stop & zlb-start
if [ -f /tmp/zlb-stop ]; then
	mv /tmp/zlb-stop /usr/local/zevenet/config/
fi
if [ -f /tmp/zlb-start ]; then
	mv /tmp/zlb-start /usr/local/zevenet/config/
fi

chmod +x /usr/local/zevenet/config/zlb-start
chmod +x /usr/local/zevenet/config/zlb-stop

# Migrate TCP farms to L4xNAT
if [ "-f /usr/local/zevenet/config/*_pen.cfg" ]; then
	/usr/local/zevenet/app/zbin/migrate_tcp_to_l4xnat.pl
fi

# HTTP profile directives migration to 4.2
if [ -f /usr/local/zevenet/app/zbin/zlbmigrationto42.sh ]; then
	/usr/local/zevenet/app/zbin/zlbmigrationto42.sh
fi

# Http profile directives migration
if [ -f /usr/local/zevenet/app/zbin/zlbmigrationto402.sh ]; then
	/usr/local/zevenet/app/zbin/zlbmigrationto402.sh
fi

# Fix fwmarks for L4xNAT backends
if [ -f /usr/local/zevenet/app/zbin/fwmark_tag_fix.pl ]; then
	/usr/local/zevenet/app/zbin/fwmark_tag_fix.pl
fi

# Migrate HTTP farms to dynamic thread model, without tcmalloc
for i in $(find /usr/local/zevenet/config/ -name *pound.cfg);
do
	if [[ `grep -c ThreadModel $i` == '0' ]]; then
		echo Migrating $i
		sed -i -e 's/Threads\t\t[0-9]*$/ThreadModel\tdynamic/' $i
	fi
done

# Migrate interface configuration files to IPv6 ready format
if [ -f /usr/local/zevenet/app/zbin/zlbmigrationtoipv6ready.pl ]; then
	/usr/local/zevenet/app/zbin/zlbmigrationtoipv6ready.pl
fi

# Disable DNS resolution for SSH service
if [ -f /usr/local/zevenet/app/zbin/ssh_nodns.sh ]; then
        /usr/local/zevenet/app/zbin/ssh_nodns.sh
fi

# Create IPDS directories
/usr/local/zevenet/app/zbin/boot_ipds.pl

# Do not show warning messages from bonding module on syslog
ZEVENET_SYSLOG_FILE="/etc/rsyslog.d/10-zevenet.conf"
if [ ! -f ${ZEVENET_SYSLOG_FILE} ];
then
	KERNEL_VERSION=`uname -r | cut -d. -f1-2`
	if [ ${KERNEL_VERSION} == '3.2' ];
	then
		STOP_TAG='~'
	else
		STOP_TAG='stop'
	fi
	echo ':msg,contains,"Loading kernel module for a network device with CAP_SYS_MODULE (deprecated).  Use CAP_NET_ADMIN and alias netdev- instead"' ${STOP_TAG} > ${ZEVENET_SYSLOG_FILE}
	/etc/init.d/rsyslog restart
fi

# restarting zevenet service
echo "Zevenet will be unavailable while the service is restarting."
/etc/init.d/zevenet stop
/etc/init.d/zevenet start

# Load conntrack modules
/sbin/modprobe nf_conntrack 2> /dev/null
/sbin/modprobe ip_conntrack 2> /dev/null

# Delete manually setup ZenLB services
rm -f /etc/rc*.d/*zenloadbalancer

# Add ZenLB services to boot process including dependencies
update-rc.d zevenet defaults

# Link zenbui
if [ -f /usr/local/zevenet/app/zenbui/zenbui ];
then
	ln -sf /usr/local/zevenet/app/zenbui/zenbui /usr/bin/zenbui
fi

#Change prompt color
sed -i "s/1;30m/0;37m/g" /etc/bash.bashrc 2> /dev/null

echo "Zevenet Load Balancer update completed..."
