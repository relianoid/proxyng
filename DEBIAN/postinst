#!/bin/bash
###############################################################################
#
#    Zevenet Software License
#    This file is part of the Zevenet Load Balancer software package.
#
#    Copyright (C) 2014-today ZEVENET SL, Sevilla (Spain)
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as
#    published by the Free Software Foundation, either version 3 of the
#    License, or any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
###############################################################################

BM_tag=0 # _BM_tag_


[ ! "$1" == "configure" ] && echo "Installation aborted $1 $2" && exit 1
[ "$1" == "configure" ] && echo "Completing the Zevenet installation..."


# upgrading global.conf
/usr/local/zevenet/bin/checkglobalconf

# load LB variables
source /usr/local/zevenet/bin/load_global_conf
load_global_conf

GLOBALCF=$globalcfg
GLOBALCFT=$globalcfg_tpl

## Apply system configurations

if [ $BM_tag -eq 1 ]; then
	#Flush apt sources
	echo > /etc/apt/sources.list

	echo "Zevenet Load Balancer installed..."
else
	echo "Zevenet Load Balancer update completed..."
fi

## Disable services in installation process.

# Set crontab
if [ $BM_tag -eq 1 ]; then
	cp $cron_tpl $cron_conf
	$cron_service restart

	#set netplug conf
	cp $netplug_init_tpl $netplug_init
	cp $netplugd_conf_tpl $netplugd_conf

	# Disable systemd-sysctl
	systemctl disable systemd-sysctl
	systemctl mask systemd-sysctl.service

	# Disable apt-daily.timer
	systemctl stop apt-daily.timer
	systemctl disable apt-daily.timer
	systemctl mask apt-daily.service

	# sec service for zevenet notifications
	systemctl stop sec 2>/dev/null
	systemctl disable sec 2>/dev/null
	systemctl stop systemd-timesyncd 2>/dev/null
	systemctl disable systemd-timesyncd 2>/dev/null

	# keepalived service for zevenet cluster
	systemctl disable keepalived 2>/dev/null

	#


fi

# SNMP services
if [[ `grep -c '#zenlb' $snmpdconfig_file` == '0' || ! -f $snmpdconfig_file ]]; then
	cp $snmpdconfig_tpl $snmpdconfig_file
fi

# Do not load init-functions on keepalived service
# This allows keepalived to stop correctly
sed -i -e 's!^. /lib/lsb/init-functions!#. /lib/lsb/init-functions!' /etc/init.d/keepalived
sed -i -e 's!\slog_!: #log_!' /etc/init.d/keepalived

# boot dependencies
# ssh
sed -i 's/^\# Required-Start:.*/# Required-Start:\t\$remote_fs \$syslog zevenet/g' /etc/init.d/ssh
sed -i 's/^\# Required-Stop:.*/# Required-Stop:\t\$remote_fs \$syslog zevenet/g' /etc/init.d/ssh
# netplug
sed -i 's/^\# Required-Start:.*/# Required-Start:\t\$local_fs zevenet/g' /etc/init.d/netplug

systemctl daemon-reload
# Add Zevenet services to boot process including dependencies
update-rc.d zevenet defaults


## Create configuration files

# Move zlb-stop & zlb-start
if [ ! -f $zlb_start_script ]; then
	cp $zlb_start_tpl $zlb_start_script
fi
if [ ! -f $zlb_stop_script ]; then
	cp $zlb_stop_tpl $zlb_stop_script
fi

# create Web server
if [ ! -f "$http_server_cert" ]; then
	cp -rf $http_server_cert_tpl $http_server_cert
fi
if [ ! -f "$http_server_key" ]; then
	cp -rf $http_server_key_tpl $http_server_key
fi

# Apply all migrating scripts to zevenet
if [ $BM_tag -eq 0 ]; then
	#migrating config files
	MIG_DIR="/usr/local/zevenet/migrating/"
	for SCRIPT in `ls $MIG_DIR`; do ${MIG_DIR}$SCRIPT; done
fi

## Restarting zevenet service
if [ $BM_tag -eq 0 ]; then
	echo "Zevenet will be unavailable while the service is restarting."
	/etc/init.d/zevenet stop
	/etc/init.d/zevenet start
else

# Run EE modules
#  this action is done here because zevenet service does not allow start EE modules withoout certificates
perl -E '
	$ENV{ SCRIPT_NAME }="postinst";

	require Zevenet::ELoad;
	&eload(
		module => "Zevenet::Service",
		func   => "start_modules_without_cert",
	);'

fi

## Check NIC DHCP
NET_CONFIG_DIR="/etc/network/if-up.d/"
ZEVENET_SHARE="/usr/local/zevenet/share/"
CHECK_NIC_DHCP="check-nic-dhcp"

if [ -f ${ZEVENET_SHARE}${CHECK_NIC_DHCP} ]; then
	# Check if it is an Amazon VM
	grep "amazon" /sys/devices/virtual/dmi/id/bios_version >/dev/null
	if [ $? -eq 0 ]; then
		cp ${ZEVENET_SHARE}${CHECK_NIC_DHCP} ${NET_CONFIG_DIR}
		${NET_CONFIG_DIR}${CHECK_NIC_DHCP}

		# Change netcat path
		perl -E " require Zevenet::Config; &setGlobalConfiguration('netcat_bin', '$aws_netcat_bin');"
	fi
	# Check if it is an Azure VM
	dpkg -l | grep waagent >/dev/null
	if [ $? -eq 0 ]; then
		cp ${ZEVENET_SHARE}${CHECK_NIC_DHCP} ${NET_CONFIG_DIR}
		${NET_CONFIG_DIR}${CHECK_NIC_DHCP}
	fi
fi

# Reconfigure APT repo for add zcmc source list
if [ $BM_tag -eq 0 ]; then
	echo "" | /usr/local/zevenet/bin/enterprise.bin Zevenet::Apt setAPTRepo >/dev/null
fi

## Run checkupgrades to update message
if [ $BM_tag -eq 0 ]; then
	$checkupgrades_bin > /dev/null
fi
